start @ x30

// main
in    @ x43 // 30 input du dividende
in    @ x45 // 32 input du diviseur
load  @ x45 // 34 on charge le diviseur
brz     x3e // 36 si le diviseur est nul, on stoppe avec erreur
jump    x42 // 38 si le diviseur n'est pas nul, on lance la division
out   @ x40 // 3a on affiche le résultat
stop    x00 // 3c arrêt du programme (code "success")
stop    x01 // 3e arrêt du programme (code "échec : diviseur nul")

// Fonction de calcul du quotient.
// Paramètres:
// 0x41 résultat
// 0x43 dividende
// 0x45 diviseur
x00     x00 // 40 quotient
load    x00 // 42 dividende (reste)
sub     x00 // 44 diviseur
brn     x3a // 46 diviseur > reste => sortie
store @ x43 // 48 stockage du reste
load  @ x40 // 4a quotient +1
add     x01
store @ x40
jump    x42 // 50 goto, fin de fonction